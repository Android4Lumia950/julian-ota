name: OTA JSON Updater

on:
  workflow_dispatch:

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl git

      - name: Ensure talkman.json exists
        run: |
          [ -f talkman.json ] || echo '{"response":[]}' > talkman.json

      - name: Fetch releases and update JSON
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JSON_FILE: talkman.json
          DEVICE: lumia950
          VERSION: 18.1
          ROMTYPE: UNOFFICIAL
        run: |
          # Fetch releases
          RELEASES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases")

          # Iterate by index to avoid subshell issues
          COUNT=$(echo "$RELEASES" | jq 'length')
          for i in $(seq 0 $((COUNT-1))); do
            TAG=$(echo "$RELEASES" | jq -r ".[$i].tag_name")
            ASSETS_COUNT=$(echo "$RELEASES" | jq ".[$i].assets | length")
            for j in $(seq 0 $((ASSETS_COUNT-1))); do
              NAME=$(echo "$RELEASES" | jq -r ".[$i].assets[$j].name")
              if [[ "$NAME" == *"-talkman.zip" ]]; then
                URL="https://github.com/${GITHUB_REPOSITORY}/releases/download/$TAG/$NAME"
                SIZE=$(echo "$RELEASES" | jq -r ".[$i].assets[$j].size")
                DATETIME=$(date +%s)

                # Skip if already exists
                if jq -e --arg fn "$NAME" '.response[] | select(.filename==$fn)' "$JSON_FILE" > /dev/null; then
                  echo "$NAME already in JSON, skipping"
                  continue
                fi

                # Compute SHA256
                curl -sL "$URL" -o tmp.zip
                ID=$(sha256sum tmp.zip | cut -d ' ' -f1)
                rm tmp.zip

                # Optional changelog
                CHANGELOG_NAME="${NAME%-talkman.zip}-talkman.txt"
                CHANGELOG_URL="https://github.com/${GITHUB_REPOSITORY}/releases/download/$TAG/$CHANGELOG_NAME"
                if curl --head --silent --fail "$CHANGELOG_URL" > /dev/null; then
                  CHANGELOG=$(curl -sL "$CHANGELOG_URL" | tr -d '\n')
                else
                  CHANGELOG=""
                fi

                # Merge entry into JSON
                ENTRY=$(jq -n \
                  --arg dt "$DATETIME" \
                  --arg fn "$NAME" \
                  --arg id "$ID" \
                  --arg romtype "$ROMTYPE" \
                  --arg size "$SIZE" \
                  --arg url "$URL" \
                  --arg version "$VERSION" \
                  --arg cl "$CHANGELOG" \
                  '{datetime: ($dt|tonumber), filename: $fn, id: $id, romtype: $romtype, size: ($size|tonumber), url: $url, version: $version, changelog: $cl}')

                OLD=$(jq '.response // []' "$JSON_FILE")
                jq -n --argjson e "$ENTRY" --argjson old "$OLD" '{response: [$e] + $old}' > tmp.json
                mv tmp.json "$JSON_FILE"
              fi
            done
          done

      - name: Commit updated talkman.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add talkman.json
          git commit -m "Update talkman.json from GitHub Release(s) [skip ci]" || echo "No changes to commit"
          git push
