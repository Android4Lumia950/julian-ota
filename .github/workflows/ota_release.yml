name: OTA JSON Updater

on:
  workflow_dispatch:

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl git

      - name: Fetch release assets and update talkman.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JSON_FILE: talkman.json
          DEVICE: lumia950
          VERSION: 18.1
          ROMTYPE: UNOFFICIAL
        run: |
          # Fetch existing JSON safely
          RAW_JSON_URL="https://raw.githubusercontent.com/${GITHUB_REPOSITORY}/main/talkman.json"
          curl -sL "$RAW_JSON_URL" -o "$JSON_FILE" || echo '{"response":[]}' > "$JSON_FILE"

          # Fetch releases using GitHub REST API
          RELEASES=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases")

          # Iterate over releases and assets
          echo "$RELEASES" | jq -c '.[]' | while read -r release; do
            TAG=$(echo "$release" | jq -r '.tag_name')
            echo "$release" | jq -c '.assets[]?' | while read -r asset; do
              NAME=$(echo "$asset" | jq -r '.name')

              # Only process -talkman.zip files
              if [[ "$NAME" == *"-talkman.zip" ]]; then
                URL="https://github.com/${GITHUB_REPOSITORY}/releases/download/$TAG/$NAME"
                SIZE=$(echo "$asset" | jq -r '.size')
                DATETIME=$(date +%s)

                # Compute SHA256 safely
                curl -sL "$URL" -o tmp.zip
                ID=$(sha256sum tmp.zip | cut -d ' ' -f1)
                rm tmp.zip

                # Optional changelog
                CHANGELOG_NAME="${NAME%-talkman.zip}-talkman.txt"
                CHANGELOG_URL="https://github.com/${GITHUB_REPOSITORY}/releases/download/$TAG/$CHANGELOG_NAME"
                if curl --head --silent --fail "$CHANGELOG_URL" > /dev/null; then
                  CHANGELOG=$(curl -sL "$CHANGELOG_URL" | tr -d '\n')
                else
                  CHANGELOG=""
                fi

                # Append new entry directly to JSON file using jq
                jq --arg dt "$DATETIME" \
                   --arg fn "$NAME" \
                   --arg id "$ID" \
                   --arg romtype "$ROMTYPE" \
                   --arg size "$SIZE" \
                   --arg url "$URL" \
                   --arg version "$VERSION" \
                   --arg cl "$CHANGELOG" \
                   '.response |= [{datetime: ($dt|tonumber), filename: $fn, id: $id, romtype: $romtype, size: ($size|tonumber), url: $url, version: $version, changelog: $cl}] + .' \
                   "$JSON_FILE" > tmp.json && mv tmp.json "$JSON_FILE"
              fi
            done
          done

      - name: Commit JSON update
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add talkman.json
          git commit -m "Update talkman.json from GitHub Release(s) [skip ci]" || echo "No changes to commit"
          git push
