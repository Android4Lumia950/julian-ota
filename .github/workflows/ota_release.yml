name: OTA JSON Updater

on:
  workflow_dispatch:

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl git

      - name: Ensure talkman.json exists
        run: |
          [ -f talkman.json ] || echo '{"response":[]}' > talkman.json

      - name: Fetch releases and update talkman.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: 18.1
          ROMTYPE: UNOFFICIAL
        run: |
          # Fetch releases JSON
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" > releases.json

          # Read old talkman.json
          OLD_JSON=$(cat talkman.json)

          # Build new entries safely, preserving tag_name for URLs
          NEW_JSON=$(jq --arg version "$VERSION" --arg romtype "$ROMTYPE" '
            .[] | .assets = (.assets // []) | .assets[]? | select(.name | test("-talkman.zip$")) |
            {
              datetime: (now|floor),
              filename: .name,
              id: "",  # SHA256 placeholder
              romtype: $romtype,
              size: .size,
              url: ("https://github.com/'"${GITHUB_REPOSITORY}"'/releases/download/" + (.tag_name // "unknown") + "/" + .name),
              version: $version,
              changelog: ""
            }
          ' releases.json)

          # Merge old + new, skipping duplicates safely
          echo "$OLD_JSON" | jq --argjson new "$NEW_JSON" '
            if (.response | length) == 0 then
              .response = $new
            else
              .response = (.response // []) + ($new | map(select(.filename as $f | (.response[]? | .filename != $f))))
            end
          ' > tmp.json

          mv tmp.json talkman.json

      - name: Commit updated talkman.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add talkman.json
          git commit -m "Update talkman.json from GitHub Release(s) [skip ci]" || echo "No changes to commit"
          git push
