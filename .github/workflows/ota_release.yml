name: OTA JSON Updater

on:
  workflow_dispatch:

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl git

      - name: Ensure talkman.json exists
        run: |
          [ -f talkman.json ] || echo '{"response":[]}' > talkman.json

      - name: Fetch releases and update talkman.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JSON_FILE: talkman.json
          VERSION: 18.1
          ROMTYPE: UNOFFICIAL
        run: |
          # Fetch releases
          curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" > releases.json

          # Merge safely into talkman.json
          jq --arg version "$VERSION" --arg romtype "$ROMTYPE" '
            # Read existing JSON
            .response as $old_resp |

            # Read releases from releases.json
            (input // []) |
            map((.assets // [])[] | select(.name | test("-talkman.zip$")) |
              {
                datetime: (now|floor),
                filename: .name,
                id: "",  # SHA256 placeholder
                romtype: $romtype,
                size: .size,
                url: ("https://github.com/'"${GITHUB_REPOSITORY}"'/releases/download/" + .name + "/" + .name),
                version: $version,
                changelog: ""
              }
            ) as $new_entries |

            # Skip duplicates by filename
            $old_resp + ($new_entries | map(select(.filename as $f | ($old_resp[]? | .filename != $f)))) |
            {response: .}
          ' talkman.json releases.json > tmp.json && mv tmp.json talkman.json

      - name: Commit updated talkman.json
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add talkman.json
          git commit -m "Update talkman.json from GitHub Release(s) [skip ci]" || echo "No changes to commit"
          git push
